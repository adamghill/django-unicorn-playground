[tool.poetry]
name = "django-unicorn-playground"
version = "0.1.1"
description = "Prototype and debug `Unicorn` components without creating a complete Django application."
authors = ["adamghill <adamghill@yahoo.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/adamghill/django-unicorn-playground/"
homepage = "https://github.com/adamghill/django-unicorn-playground/"
documentation = "https://github.com/adamghill/django-unicorn-playground/"
keywords = ["django", "python", "css", "html"]
packages = [
  { include = "django_unicorn_playground", from = "src" }
]

[tool.poetry.urls]
"Funding" = "https://github.com/sponsors/adamghill"

[tool.poetry.dependencies]
python = "^3.10"
click = "^8.1.7"
#django-unicorn = { path = "../django-unicorn/", develop = true }
django-unicorn = ">=0.61.0"
typeguard = "^4.3"
rich-click = "^1.8"

[tool.poetry.group.dev.dependencies]
pytest = "^8"
pytest-django = "^4"
pytest-cov = "^5"
django-stubs = "^5"

[tool.poetry.scripts]
unicorn = "django_unicorn_playground.cli:cli"

[tool.ruff]
src = ["django_unicorn_playground"]
exclude = []
target-version = "py310"
line-length = 120

[tool.ruff.lint]
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
  # Ignore unused variables
  "F841",
   # Ignore exception strings
  "EM101", "EM102",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.lint.isort]
known-first-party = ["django_unicorn_playground"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252", "ARG001"]

[tool.pytest.ini_options]
pythonpath = ["src"]
addopts = "--quiet --failed-first -p no:warnings"
testpaths = [
    "tests"
]
markers = [
    "slow: marks tests as slow",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
files = [
  "django_unicorn_playground"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
